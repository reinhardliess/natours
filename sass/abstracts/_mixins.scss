@mixin clearfix {
  &::after {
    display: table;
    content: "  ";
    clear: both;
  }
}

@mixin circle($diameter: null) {
  width: $diameter;
  height: $diameter;
  border-radius: 50%;
}

@mixin center-absolute($offset-left: -50%, $offset-right: -50%) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate($offset-left, $offset-right);
}

@mixin bg-gradient($direction, $color, $opacity, $image: null) {
  @if $image {
    background-image:
      linear-gradient($direction,
        rgba(map-get($color, 'light'), $opacity),
        rgba(map-get($color, 'dark'), $opacity)),
        url(#{$image});
    background-size: cover;
    background-position: top;
  } @else {
    background-image:
    linear-gradient($direction,
      rgba(map-get($color, 'light'), $opacity),
      rgba(map-get($color, 'dark'), $opacity))
  }

}

// Media Query Manager

/*
  0 - 600px:      Phone
  600 - 900px:    Tablet portrait
  900 - 1200px:   Tablet landscape
  [1200 - 1800px] is where our normal styles apply
  1800px + :      Big desktop

  ORDER: Base + typography > general layout + grid > page layout > components

*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media screen and (max-width: #{px-to-em(600px)}) {
      @content;
    }
  }

  @if $breakpoint == tablet-portrait {
    @media screen and (max-width: #{px-to-em(900px)}) {
      @content;
    }
  }

  @if $breakpoint == tablet-landscape {
    @media screen and (max-width: #{px-to-em(1200px)}) {
      @content;
    }
  }

  @if $breakpoint == big-desktop {
    @media screen and (min-width: #{px-to-em(1800px)}) {
      @content;
    }
  }

}